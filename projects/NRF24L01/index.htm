<html>
<head>
<title>
Arduino Pro Mini with nRF24L01+ 2.4GHz radio
</title>
<STYLE TYPE="text/css">
.text1 { color:maroon;font-weight:bold;font-size:140%;font-family:sans-serif;}
.text2 { color:black;font-weight:bold;font-size:95%;font-family:courier;}
.text3 { color:maroon;font-weight:1000;font-size:100%;font-family:sans-serif;}
.text4 { color:black;font-weight:bold;font-size:95%;font-family:sans-serif;}
.indented
   {
   padding-left: 60pt;
   padding-right: 50pt;
   }
</STYLE>
<link rel=stylesheet type="text/css" href="../style.css">
</head>

<body bgcolor=white class=text4>

<center><h3 class=text1>Arduino Pro Mini with nRF24L01+ 2.4GHz radio</h3></center>
<br>
<div class="indented">

The nRF24L01+ is a cheap ($5 AUD) 2.4GHz radio transceiver module widely available on ebay with a data transfer rate of 250kbps, 1Mbps and 2Mbps over
a SPI interface. It runs on 3.3V but the i/o pins are 5V-tolerant which makes it easy to interface to an Arduino Pro Mini. 
There are plenty of online documentation and guides on how to use this transceiver. For example  
see this <a href="https://howtomechatronics.com/tutorials/arduino/arduino-wireless-communication-nrf24l01-tutorial/">tutorial</a>.
<br>
<br>
<image src=nrf24_2.png border=0><image src=nrf24_1.png border=0>
<br>
<h3 class=text3>Specification</h3>
<table cellspacing=0 cellpadding=4 border=1>
<tbody>
<tr><td>Frequency Range</td><td>2.4 GHz ISM Band</td></tr><tr><td>Maximum Air Data Rate</td><td>2 Mb/s</td></tr>
<tr><td>Modulation Format</td><td>GFSK</td></tr>
<tr><td>Max. Output Power</td><td>0 dBm</td></tr>
<tr><td>Operating Supply Voltage</td><td>1.9 V to 3.6 V</td></tr>
<tr><td>Max. Receive Current</td><td>13.5mA</td></tr>
<tr><td>Max. Transmit Current</td><td>11.5mA</td></tr>
<tr><td>Min. Current(Standby Mode)</td><td>26uA</td></tr>
<tr><td>Logic Inputs</td><td>5V Tolerant</td></tr>
<tr><td>Communication Range</td><td>800+ m (line of sight)</td></tr>
</tbody>
</table>
<br>
The nRF24L01+ has a peak receive current of 13.5mA so a stable power supply from a 500mA USB port is good enough. A 250mA 3.3V LDO regulator
steps the 5V down for the transceiver. Compared to the ESP8266 which has a peak draw of 350mA and averages 80mA, the nRF2401L+ should be
the defacto radio for low power wireless projects.
<br>
<h3 class=text3>Schematic</h3>
<image src=schematic.png border=0>
<br><br>
A 10uF bypass capacitor is used to smooth out power fluctuations that could affect its operation. Some recommend the use of an additional 100nf decoupling cap as well to 
filter out any high frequency noise in the power. All the cheap ebay modules are clones of the original Nordic Semiconductor
chip but good enough for hobbyists to play with. Some are worse than others so do a range/reliability test to check them out.

<h3 class=text3>Arduino Sketches</h3>
My sketches below are customised from the original <a href="https://github.com/nRF24/RF24">RF24 library</a> which is well documented
<a href="http://tmrh20.github.io/RF24/">here</a>.
<br>
<ol>
<li><a href="https://github.com/alw1746/NRF24L01-Arduino/blob/master/examples/pingpair_ack/pingpair_ack.ino">pingpair_ack.ino</a><br>
Range/reliability testing between 2 transceivers using a timed ping-pong (transmit-response) algorithm. To obtain the best range, keep
the boards parallel to each other and upright high above ground. The antenna alignment works best this way.
<br><br>
<image src=sender.jpg border=0> <image src=receiver.jpg border=0>
<p>2m apart in same room, no faults detected. See <a href="range1.txt">Serial monitor output</a>
<br><br>
10m apart, 2 brick walls in between, some faults detected. See <a href="range2.txt">Serial monitor output</a>
<br></p>
<li><a href="https://github.com/alw1746/NRF24L01-Arduino/blob/master/examples/scanner/scanner.ino">scanner.ino</a><br>
Scan and display 2.4GHz wifi channel traffic to help pick a 'quiet' channel.
<br>
The default radio channel used by nRF24L01+ is 76(0x4C) which is on the edge of busy wifi traffic.
<br><br>
<image src=scanner_output.png border=0 width=675px height=446px>
<br><br>
<a href=scanner_output.txt>Full serial monitor output</a>
</ol>
<br><br>
   </div>
</body>
</html>
